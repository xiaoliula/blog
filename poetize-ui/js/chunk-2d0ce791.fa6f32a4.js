(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0ce791"],{6034:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"58efb844-vue-loader-template"}!./node_modules/cache-loader/dist/cjs.js??ref--13-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!./node_modules/cache-loader/dist/cjs.js??ref--1-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/common/uploadPicture.vue?vue&type=template&id=45df32f2&scoped=true\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\'div\', [_c(\'el-upload\', {\n    ref: "upload",\n    staticClass: "upload-demo",\n    attrs: {\n      "multiple": "",\n      "drag": "",\n      "action": \'\',\n      "on-change": _vm.handleChange,\n      "before-upload": _vm.beforeUpload,\n      "on-success": _vm.handleSuccess,\n      "on-error": _vm.handleError,\n      "on-remove": _vm.handleRemove,\n      "http-request": _vm.customUpload,\n      "list-type": _vm.listType,\n      "accept": _vm.accept,\n      "limit": _vm.maxNumber,\n      "auto-upload": false\n    }\n  }, [_c(\'div\', {\n    staticClass: "el-upload__text"\n  }, [_c(\'svg\', {\n    attrs: {\n      "viewBox": "0 0 1024 1024",\n      "width": "40",\n      "height": "40"\n    }\n  }, [_c(\'path\', {\n    attrs: {\n      "d": "M666.2656 629.4528l-113.7664-112.4864c-20.7872-20.5824-54.3232-20.5312-75.1104 0.1024l-113.3056 112.4864c-20.8896 20.736-21.0432 54.528-0.256 75.4688 20.736 20.8896 54.528 21.0432 75.4688 0.256l22.6304-22.4256v189.5936c0 29.44 23.9104 53.3504 53.3504 53.3504s53.3504-23.9104 53.3504-53.3504v-189.5424l22.6816 22.4256a53.1456 53.1456 0 0 0 37.5296 15.4112c13.7728 0 27.4944-5.2736 37.9392-15.8208 20.6336-20.9408 20.4288-54.7328-0.512-75.4688z",\n      "fill": "#FFE37B"\n    }\n  }), _c(\'path\', {\n    attrs: {\n      "d": "M820.992 469.504h-5.376c-3.072-163.328-136.3456-294.8096-300.4416-294.8096S217.856 306.1248 214.784 469.504H209.408c-100.7104 0-182.3744 81.664-182.3744 182.3744s81.664 182.3744 182.3744 182.3744h209.7664V761.856c-30.208 5.5808-62.464-3.3792-85.6576-26.7264-37.3248-37.5808-37.0688-98.5088 0.512-135.7824l113.3056-112.4864c37.2224-36.9664 97.8432-37.0176 135.168-0.1536l113.7664 112.4864c18.2272 18.0224 28.3648 42.0864 28.5184 67.7376 0.1536 25.6512-9.728 49.8176-27.7504 68.0448a95.40096 95.40096 0 0 1-68.3008 28.5184c-5.9392 0-11.776-0.512-17.5104-1.5872v72.3456h209.7664c100.7104 0 182.3744-81.664 182.3744-182.3744S921.7024 469.504 820.992 469.504z",\n      "fill": "#8C7BFD"\n    }\n  })]), _c(\'div\', [_vm._v("拖拽上传 / 点击上传")])]), _vm.listType === \'picture\' ? [_c(\'div\', {\n    staticClass: "el-upload__tip",\n    attrs: {\n      "slot": "tip"\n    },\n    slot: "tip"\n  }, [_vm._v(" 一次最多上传" + _vm._s(_vm.maxNumber) + "张图片，且每张图片不超过" + _vm._s(_vm.maxSize) + "M！ ")])] : [_c(\'div\', {\n    staticClass: "el-upload__tip",\n    attrs: {\n      "slot": "tip"\n    },\n    slot: "tip"\n  }, [_vm._v(" 一次最多上传" + _vm._s(_vm.maxNumber) + "个文件，且每个文件不超过" + _vm._s(_vm.maxSize) + "M！ ")])]], 2), _c(\'div\', {\n    staticStyle: {\n      "text-align": "center",\n      "margin-top": "20px"\n    }\n  }, [_c(\'el-button\', {\n    staticStyle: {\n      "font-size": "12px"\n    },\n    attrs: {\n      "type": "success"\n    },\n    on: {\n      "click": _vm.submitUpload\n    }\n  }, [_vm._v(" 上传 ")])], 1)], 1);\n};\nvar staticRenderFns = [];\n\n// CONCATENATED MODULE: ./src/components/common/uploadPicture.vue?vue&type=template&id=45df32f2&scoped=true\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.error.cause.js\nvar es_error_cause = __webpack_require__("d9e2");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.iterator.constructor.js\nvar esnext_iterator_constructor = __webpack_require__("0643");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.iterator.for-each.js\nvar esnext_iterator_for_each = __webpack_require__("4e3e");\n\n// CONCATENATED MODULE: ./src/utils/ajaxUpload.js\n\n\n\nfunction getError(action, option, xhr) {\n  let msg;\n  if (xhr.response) {\n    msg = `${xhr.response.error || xhr.response}`;\n  } else if (xhr.responseText) {\n    msg = `${xhr.responseText}`;\n  } else {\n    msg = `fail to ${action} ${xhr.status}`;\n  }\n  return new Error(msg);\n}\nfunction getBody(xhr) {\n  const text = xhr.responseText || xhr.response;\n  if (!text) {\n    return text;\n  }\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    return text;\n  }\n}\nfunction upload(option) {\n  const xhr = new XMLHttpRequest();\n  const action = option.action;\n  if (xhr.upload) {\n    xhr.upload.onprogress = function progress(e) {\n      if (e.total > 0) {\n        e.percent = e.loaded / e.total * 100;\n      }\n      option.onProgress(e);\n    };\n  }\n  const formData = new FormData();\n  if (option.data) {\n    Object.keys(option.data).forEach(key => {\n      formData.append(key, option.data[key]);\n    });\n  }\n  formData.append(option.filename, option.file, option.file.name);\n  xhr.onerror = function error(e) {\n    option.onError(e);\n  };\n  xhr.onload = function onload() {\n    if (xhr.status < 200 || xhr.status >= 300) {\n      return option.onError(getError(action, option, xhr));\n    }\n    option.onSuccess(getBody(xhr));\n  };\n  xhr.open(\'post\', action, true);\n  if (option.withCredentials && \'withCredentials\' in xhr) {\n    xhr.withCredentials = true;\n  }\n  const headers = option.headers || {};\n  for (let item in headers) {\n    if (headers.hasOwnProperty(item) && headers[item] !== null) {\n      xhr.setRequestHeader(item, headers[item]);\n    }\n  }\n  xhr.send(formData);\n  return xhr;\n}\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--13-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--1-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/common/uploadPicture.vue?vue&type=script&lang=js\n\n/* harmony default export */ var uploadPicturevue_type_script_lang_js = ({\n  props: {\n    isAdmin: {\n      type: Boolean,\n      default: false\n    },\n    prefix: {\n      type: String,\n      default: ""\n    },\n    listType: {\n      type: String,\n      default: "picture"\n    },\n    storeType: {\n      type: String,\n      default: localStorage.getItem("defaultStoreType")\n    },\n    accept: {\n      type: String,\n      default: "image/*"\n    },\n    maxSize: {\n      type: Number,\n      default: 5\n    },\n    maxNumber: {\n      type: Number,\n      default: 5\n    }\n  },\n  data() {\n    return {};\n  },\n  computed: {},\n  watch: {},\n  created() {},\n  mounted() {},\n  methods: {\n    submitUpload() {\n      this.$refs.upload.submit();\n    },\n    customUpload(options) {\n      let suffix = "";\n      if (options.file.name.lastIndexOf(\'.\') !== -1) {\n        suffix = options.file.name.substring(options.file.name.lastIndexOf(\'.\'));\n      }\n      let key = this.prefix + "/" + (!this.$common.isEmpty(this.$store.state.currentUser.username) ? this.$store.state.currentUser.username.replace(/[^a-zA-Z]/g, \'\') + this.$store.state.currentUser.id : this.$store.state.currentAdmin.username.replace(/[^a-zA-Z]/g, \'\') + this.$store.state.currentAdmin.id) + new Date().getTime() + Math.floor(Math.random() * 1000) + suffix;\n      if (this.storeType === "local") {\n        let fd = new FormData();\n        fd.append("file", options.file);\n        fd.append("originalName", options.file.name);\n        fd.append("key", key);\n        fd.append("relativePath", key);\n        fd.append("type", this.prefix);\n        fd.append("storeType", this.storeType);\n        return this.$http.upload(this.$constant.baseURL + "/resource/upload", fd, this.isAdmin, options);\n      } else if (this.storeType === "qiniu") {\n        const xhr = new XMLHttpRequest();\n        xhr.open(\'get\', this.$constant.baseURL + "/qiniu/getUpToken?key=" + key, false);\n        if (this.isAdmin) {\n          xhr.setRequestHeader("Authorization", localStorage.getItem("adminToken"));\n        } else {\n          xhr.setRequestHeader("Authorization", localStorage.getItem("userToken"));\n        }\n        try {\n          xhr.send();\n          const res = JSON.parse(xhr.responseText);\n          if (res !== null && res.hasOwnProperty("code") && res.code === 200) {\n            options.data = {\n              token: res.data,\n              key: key\n            };\n            options.action = this.$store.state.sysConfig.qiniuUrl;\n            return upload(options);\n          } else if (res !== null && res.hasOwnProperty("code") && res.code !== 200) {\n            return Promise.reject(res.message);\n          } else {\n            return Promise.reject("服务异常！");\n          }\n        } catch (e) {\n          return Promise.reject(e.message);\n        }\n      }\n    },\n    // 文件上传成功时的钩子\n    handleSuccess(response, file, fileList) {\n      let url;\n      if (this.storeType === "local") {\n        url = response.data;\n      } else if (this.storeType === "qiniu") {\n        url = this.$store.state.sysConfig[\'qiniu.downloadUrl\'] + response.key;\n        this.$common.saveResource(this, this.prefix, url, file.size, file.raw.type, file.name, "qiniu", this.isAdmin);\n      }\n      this.$emit("addPicture", url);\n    },\n    handleError(err, file, fileList) {\n      this.$message({\n        message: err,\n        type: "error"\n      });\n    },\n    // 上传文件之前的钩子，参数为上传的文件，若返回 false 或者返回 Promise 且被 reject，则停止上传\n    beforeUpload(file) {},\n    // 文件列表移除文件时的钩子\n    handleRemove(file, fileList) {},\n    // 添加文件、上传成功和上传失败时都会被调用\n    handleChange(file, fileList) {\n      let flag = false;\n      if (file.size > this.maxSize * 1024 * 1024) {\n        this.$message({\n          message: "图片最大为" + this.maxSize + "M！",\n          type: "warning"\n        });\n        flag = true;\n      }\n      if (flag) {\n        fileList.splice(fileList.size - 1, 1);\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/components/common/uploadPicture.vue?vue&type=script&lang=js\n /* harmony default export */ var common_uploadPicturevue_type_script_lang_js = (uploadPicturevue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__("2877");\n\n// CONCATENATED MODULE: ./src/components/common/uploadPicture.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  common_uploadPicturevue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "45df32f2",\n  null\n  \n)\n\n/* harmony default export */ var uploadPicture = __webpack_exports__["default"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6034\n')}}]);